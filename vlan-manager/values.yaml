# VLAN Manager Helm Chart Values
global:
  namespace: network-management
  image:
    tag: "2.0.0"
    pullPolicy: Always
    pullSecrets:
      - name: docker-hub-secret

# API Configuration
api:
  enabled: true
  replicaCount: 2
  image:
    repository: theunis/vlan-manager-api
    tag: "2.0.0"
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 8000
    targetPort: 8000
  
  serviceAccount:
    create: true
    name: vlan-manager-api
  
  env:
    DATABASE_HOST: "pgbouncer.network-management.svc.cluster.local"
    DATABASE_PORT: "5432"
    DATABASE_NAME: "freeradius"
    DATABASE_USER: "freeradius"
  
  secrets:
    database:
      secretName: freeradius-pg-secret
      passwordKey: password
    keycloak:
      secretName: vlan-keycloak-secret
      clientSecretKey: client_secret
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"
  
  probes:
    liveness:
      httpGet:
        path: /health
        port: 8000
      initialDelaySeconds: 30
      periodSeconds: 10
    readiness:
      httpGet:
        path: /ready
        port: 8000
      initialDelaySeconds: 5
      periodSeconds: 5

# Frontend Configuration  
frontend:
  enabled: true
  replicaCount: 2
  image:
    repository: theunis/vlan-manager-frontend
    tag: "2.0.0"
    pullPolicy: Always
  
  service:
    type: ClusterIP
    port: 80
    targetPort: 80
  
  resources:
    requests:
      memory: "64Mi"
      cpu: "50m"
    limits:
      memory: "128Mi"
      cpu: "200m"

# Notification Service Configuration
notification:
  enabled: true
  replicaCount: 1  # Only one replica to avoid duplicate notifications
  image:
    repository: theunis/vlan-manager-notification
    tag: "2.0.0"
    pullPolicy: Always
  
  env:
    DATABASE_HOST: "pgbouncer.network-management.svc.cluster.local"
    DATABASE_PORT: "5432"
    DATABASE_NAME: "freeradius"
    DATABASE_USER: "freeradius"
  
  secrets:
    database:
      secretName: freeradius-pg-secret
      passwordKey: password
    telegram:
      secretName: telegram-bot-secret
      tokenKey: token
      chatIdKey: chat_id
  
  resources:
    requests:
      memory: "128Mi"
      cpu: "50m"
    limits:
      memory: "256Mi"
      cpu: "200m"

# Sync Service Configuration
sync:
  enabled: true
  image:
    repository: theunis/vlan-manager-sync
    tag: "2.0.0"
    pullPolicy: Always
  
  cronjob:
    enabled: true
    schedule: "0 */6 * * *"  # Every 6 hours
    successfulJobsHistoryLimit: 3
    failedJobsHistoryLimit: 1
    ttlSecondsAfterFinished: 86400  # 24 hours
  
  job:
    ttlSecondsAfterFinished: 3600  # 1 hour for manual jobs
  
  env:
    POSTGRES_HOST: "pgbouncer.network-management.svc.cluster.local"
    POSTGRES_PORT: "5432"
    POSTGRES_DB: "freeradius"
    POSTGRES_USER: "freeradius"
  
  secrets:
    unifi:
      secretName: unifi-credentials
      controllerUrlKey: controller_url
      usernameKey: username
      passwordKey: password
    postgres:
      secretName: freeradius-pg-secret
      passwordKey: password
  
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "500m"

# ConfigMaps
configMaps:
  vlanManagerConfig:
    enabled: true
    # Add your config data here
    
  unifiFieldMappings:
    enabled: true
    data:
      field_mappings.yaml: |
        # UniFi field mappings configuration
        device_fields:
          mac: "mac"
          name: "name"
          model: "model"
          ip: "ip"
          last_seen: "last_seen"
          adopted: "adopted"
          disabled: "disabled"

# Ingress Configuration
ingress:
  enabled: true
  className: traefik
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
    traefik.ingress.kubernetes.io/router.middlewares: network-management-oauth2-proxy@kubernetescrd
  
  hosts:
    - host: vlan.scheeps.online
      paths:
        - path: /
          pathType: Prefix
          service: vlan-manager-frontend
          port: 80
        - path: /api
          pathType: Prefix  
          service: vlan-manager-api
          port: 8000
  
  tls:
    - secretName: vlan-tls-secret
      hosts:
        - vlan.scheeps.online

# RBAC Configuration
rbac:
  create: true
  rules:
    - apiGroups: ["batch"]
      resources: ["jobs"]
      verbs: ["create", "get", "list", "watch"]
    - apiGroups: [""]
      resources: ["configmaps"]
      verbs: ["get", "list"]