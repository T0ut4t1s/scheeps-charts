# Default values for mosquitto-mqtt
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: eclipse-mosquitto
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: LoadBalancer
  mqtt:
    port: 1883
    targetPort: 1883
    name: mqtt
  websocket:
    enabled: true
    port: 9001
    targetPort: 9001
    name: websocket

# LoadBalancer IP allocation from MetalLB
loadBalancerIP: ""

resources:
  limits:
    cpu: 100m
    memory: 128Mi
  requests:
    cpu: 50m
    memory: 64Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Persistence configuration (PVC managed outside helm)
persistence:
  # Name of existing PVC
  existingClaim: "mqtt-config-pvc"
  mountPath: "/mosquitto"

# MQTT Configuration
mqtt:
  # Logging configuration
  logging:
    connectionMessages: false
    logTypes:
      - error
      - warning
      - notice
      - information
      # Uncomment to log MQTT activity:
      # - subscribe
      # - unsubscribe

  # Config file content (generated from above settings)
  config: |
    password_file /mosquitto/config/passwd
    
    listener 1883
    allow_anonymous false
    
    listener 9001
    protocol websockets
    allow_anonymous false
    
    log_dest stdout
    {{- range .Values.mqtt.logging.logTypes }}
    log_type {{ . }}
    {{- end }}
    connection_messages {{ .Values.mqtt.logging.connectionMessages }}

  # User accounts to create from secret
  users:
    homeassistant:
      enabled: true
    nodered:
      enabled: true
    frigate:
      enabled: true

# External Secret reference (managed outside helm)
secrets:
  # Name of the existing secret containing MQTT user credentials
  credentialsSecret: "mqtt-credentials"
  # Keys expected in the secret (can be overridden if your secret uses different key names)
  keys:
    homeassistantPassword: "ha-password"
    noderedPassword: "nodered-password"
    frigatePassword: "frigate-password"

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  fsGroup: 1883

# Security context
securityContext:
  runAsUser: 1883
  runAsGroup: 1883
  runAsNonRoot: true

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""