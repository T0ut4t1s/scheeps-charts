# Default values for home-assistant
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/home-assistant/home-assistant
  pullPolicy: IfNotPresent
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

service:
  type: ClusterIP
  port: 80
  targetPort: 8123
  name: http

resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

nodeSelector: {}

tolerations: []

affinity: {}

# Persistence configuration (PVC managed outside helm)
persistence:
  # Name of existing PVC
  existingClaim: "ha-config-pvc"
  mountPath: "/config"

# Home Assistant Configuration
homeAssistant:
  # Timezone
  timezone: "Europe/London"

  # Enable privileged mode for device access
  privileged: false

  # Host network for discovery
  hostNetwork: false

  # Trusted proxies for reverse proxy support
  trustedProxies:
    - "10.42.0.0/16"  # Pod CIDR
    - "10.43.0.0/16"  # Service CIDR

  # OIDC Configuration
  oidc:
    issuer: "https://auth.scheeps.online/realms/scheeps"
    groupsClaim: "resource_access.home-assistant.roles"

# Database configuration (PostgreSQL managed outside helm)
database:
  # PostgreSQL connection details
  enabled: true
  # Hardcoded connection details
  host: "pgbouncer.home-automation.svc.cluster.local"
  port: 5432

# External Secret reference (managed outside helm)
secrets:
  # OAuth2 authentication secret
  authSecret:
    name: "ha-auth-secret"
    clientIdKey: "client_id"
    clientSecretKey: "client_secret"
  # PostgreSQL credentials secret
  postgresSecret:
    name: "ha-pg-secret"
    usernameKey: "username"
    passwordKey: "password"
    databaseKey: "database"

# Pod annotations
podAnnotations: {}

# Pod security context
podSecurityContext:
  fsGroup: 1000

# Security context
securityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true

# Service account
serviceAccount:
  create: true
  annotations: {}
  name: ""