apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "home-assistant.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "home-assistant.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "home-assistant.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.homeAssistant.hostNetwork }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- if .Values.homeAssistant.privileged }}
          securityContext:
            privileged: true
          {{- else }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
          env:
            - name: TZ
              value: {{ .Values.homeAssistant.timezone }}
            {{- if .Values.database.enabled }}
            - name: POSTGRES_HOST
              value: {{ .Values.database.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.database.port | quote }}
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecret.name }}
                  key: {{ .Values.secrets.postgresSecret.usernameKey }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecret.name }}
                  key: {{ .Values.secrets.postgresSecret.passwordKey }}
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.postgresSecret.name }}
                  key: {{ .Values.secrets.postgresSecret.databaseKey }}
            - name: DATABASE_URL
              value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
            {{- end }}
            {{- if .Values.secrets.authSecret }}
            - name: OIDC_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.authSecret.name }}
                  key: {{ .Values.secrets.authSecret.clientIdKey }}
            - name: OIDC_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.secrets.authSecret.name }}
                  key: {{ .Values.secrets.authSecret.clientSecretKey }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 60
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: home-assistant-config
              mountPath: {{ .Values.persistence.mountPath }}
            - name: ha-configuration
              mountPath: /config/configuration.yaml
              subPath: configuration.yaml
      volumes:
        - name: home-assistant-config
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        - name: ha-configuration
          configMap:
            name: {{ include "home-assistant.fullname" . }}-config
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}