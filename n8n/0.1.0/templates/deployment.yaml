apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "n8n.fullname" . }}
  labels:
    {{- include "n8n.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.main.count }}
  selector:
    matchLabels:
      {{- include "n8n.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "n8n.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          {{- with .Values.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.N8N_PORT }}
              protocol: TCP
          env:
            # Environment variables from ConfigMap
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: NODE_ENV
            - name: N8N_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_HOST
            - name: N8N_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_PORT
            - name: N8N_PROTOCOL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_PROTOCOL
            - name: WEBHOOK_URL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: WEBHOOK_URL
            - name: N8N_LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_LOG_LEVEL
            - name: N8N_METRICS
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_METRICS
            - name: N8N_DIAGNOSTICS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_DIAGNOSTICS_ENABLED
            - name: N8N_PERSONALIZATION_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_PERSONALIZATION_ENABLED
            - name: N8N_VERSION_NOTIFICATIONS_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_VERSION_NOTIFICATIONS_ENABLED
            - name: N8N_TEMPLATES_ENABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_TEMPLATES_ENABLED
            - name: N8N_PUBLIC_API_DISABLED
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: N8N_PUBLIC_API_DISABLED

            # Sensitive environment variables from Secrets
            - name: N8N_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecrets.app.name }}
                  key: {{ .Values.existingSecrets.app.encryptionKey }}

            # Database configuration
            - name: DB_TYPE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: DB_TYPE
            - name: DB_POSTGRESDB_HOST
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: DB_POSTGRESDB_HOST
            - name: DB_POSTGRESDB_PORT
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: DB_POSTGRESDB_PORT
            - name: DB_POSTGRESDB_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: {{ include "n8n.configMapName" . }}
                  key: DB_POSTGRESDB_DATABASE
            - name: DB_POSTGRESDB_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecrets.database.name }}
                  key: {{ .Values.existingSecrets.database.username }}
            - name: DB_POSTGRESDB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.existingSecrets.database.name }}
                  key: {{ .Values.existingSecrets.database.password }}
          {{- if .Values.main.persistence.enabled }}
          volumeMounts:
            - name: n8n-data
              mountPath: /home/node/.n8n
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
          {{- end }}
      {{- if .Values.main.persistence.enabled }}
      volumes:
        - name: n8n-data
          persistentVolumeClaim:
            claimName: {{ include "n8n.pvcName" . }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}