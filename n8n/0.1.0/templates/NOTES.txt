1. Get the application URL by running these commands:
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range .paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host.host }}{{ .path }}
  {{- end }}
{{- end }}
{{- else if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "n8n.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Release.Namespace }} svc -w {{ include "n8n.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "n8n.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Release.Namespace }} -l "{{ include "n8n.selectorLabels" . | replace ":" "=" | replace " " "," }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Release.Namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Release.Namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. N8N Configuration:
   - Host: {{ .Values.config.N8N_HOST }}
   - Protocol: {{ .Values.config.N8N_PROTOCOL }}
   - Database: {{ .Values.db.type }} ({{ .Values.db.host }}:{{ .Values.db.port }}/{{ .Values.db.name }})
   {{- if .Values.main.persistence.enabled }}
   - Persistence: Enabled (External PVC: {{ .Values.main.persistence.pvcName }})
   {{- else }}
   - Persistence: Disabled
   {{- end }}
   {{- if .Values.redis.enabled }}
   - Queue Mode: Enabled (Redis: {{ .Values.redis.host }}:{{ .Values.redis.port }})
   {{- else }}
   - Queue Mode: Disabled (Single instance mode)
   {{- end }}

3. Required External Resources:
   {{- if .Values.main.persistence.enabled }}
   - PVC: {{ .Values.main.persistence.pvcName }} (must exist in {{ .Release.Namespace }} namespace)
   {{- end }}

4. Required Secrets:
   - Application secrets: {{ .Values.existingSecrets.app.name }}
   - Database credentials: {{ .Values.existingSecrets.database.name }}
   {{- if .Values.redis.enabled }}
   {{- if .Values.redis.credentialsSecret }}
   - Redis credentials: {{ .Values.redis.credentialsSecret.name }}
   {{- end }}
   {{- end }}

Make sure these secrets{{- if .Values.main.persistence.enabled }} and PVC{{- end }} exist in the {{ .Release.Namespace }} namespace before the pod can start successfully.