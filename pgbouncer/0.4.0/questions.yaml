categories:
- Database
- Connection Pool
- PostgreSQL

questions:
# Basic Configuration
- variable: replicaCount
  default: 1
  description: "Number of PgBouncer replicas"
  type: int
  label: Replica Count
  group: "Basic Configuration"

- variable: image.tag
  default: "1.24.1"
  description: "PgBouncer image tag/version"
  type: string
  label: Image Version
  group: "Basic Configuration"

- variable: image.repository
  default: "bitnami/pgbouncer"
  description: "PgBouncer image repository"
  type: string
  label: Image Repository
  group: "Basic Configuration"

# PostgreSQL Connection Configuration
- variable: postgresql.host
  default: "postgresql-cluster-rw.postgres-system.svc.cluster.local"
  description: "PostgreSQL server hostname or service name"
  type: string
  label: PostgreSQL Host
  group: "PostgreSQL Connection"
  required: true

- variable: postgresql.port
  default: 5432
  description: "PostgreSQL server port"
  type: int
  label: PostgreSQL Port
  group: "PostgreSQL Connection"

- variable: postgresql.connectionSecret.name
  default: "postgresql-superuser"
  description: "Name of Kubernetes secret containing PostgreSQL connection credentials"
  type: string
  label: PostgreSQL Connection Secret Name
  group: "PostgreSQL Connection"
  required: true

- variable: postgresql.connectionSecret.usernameKey
  default: "username"
  description: "Key within the secret containing the PostgreSQL username"
  type: string
  label: PostgreSQL Username Key
  group: "PostgreSQL Connection"

- variable: postgresql.connectionSecret.passwordKey
  default: "password"
  description: "Key within the secret containing the PostgreSQL password"
  type: string
  label: PostgreSQL Password Key
  group: "PostgreSQL Connection"

# Authentication Configuration
- variable: auth.type
  default: "md5"
  description: "PostgreSQL authentication method"
  type: enum
  label: Authentication Type
  group: "Authentication"
  options:
    - "md5"
    - "scram-sha-256"
    - "plain"
    - "trust"

- variable: auth.poolMode
  default: "transaction"
  description: "PgBouncer pool mode"
  type: enum
  label: Pool Mode
  group: "Authentication"
  options:
    - "session"
    - "transaction"
    - "statement"

- variable: auth.minPoolSize
  default: 5
  description: "Minimum pool size per user/database pair"
  type: int
  label: Minimum Pool Size
  group: "Authentication"

- variable: auth.ignoreStartupParameters
  default: ""
  description: "Comma-separated list of startup parameters to ignore"
  type: string
  label: Ignore Startup Parameters
  group: "Authentication"

# Database Connections Configuration
- variable: auth.connectionCount
  default: 7
  description: "Number of database connections to configure"
  type: int
  label: Number of Database Connections
  group: "Database Connections"
  min: 1
  max: 10

# Connection 1 (Radarr Main)
- variable: auth.connection1Enabled
  default: true
  description: "Enable database connection 1"
  type: boolean
  label: Enable Connection 1
  group: "Connection 1 (Radarr Main)"
  show_if: "auth.connectionCount>=1"

- variable: auth.connection1Name
  default: "radarr"
  description: "Connection name identifier"
  type: string
  label: Connection Name
  group: "Connection 1 (Radarr Main)"
  show_if: "auth.connection1Enabled=true"
  required: true

- variable: auth.connection1SecretName
  default: "radarr-pg-secret"
  description: "Kubernetes secret containing database credentials"
  type: string
  label: Database Secret Name
  group: "Connection 1 (Radarr Main)"
  show_if: "auth.connection1Enabled=true"
  required: true

- variable: auth.connection1UsernameKey
  default: "username"
  description: "Key in secret containing username"
  type: string
  label: Username Key
  group: "Connection 1 (Radarr Main)"
  show_if: "auth.connection1Enabled=true"

- variable: auth.connection1PasswordKey
  default: "password"
  description: "Key in secret containing password"
  type: string
  label: Password Key
  group: "Connection 1 (Radarr Main)"
  show_if: "auth.connection1Enabled=true"

- variable: auth.connection1DatabaseKey
  default: "database"
  description: "Key in secret containing database name"
  type: string
  label: Database Key
  group: "Connection 1 (Radarr Main)"
  show_if: "auth.connection1Enabled=true"

# Connection 2 (Radarr Log)
- variable: auth.connection2Enabled
  default: true
  description: "Enable database connection 2"
  type: boolean
  label: Enable Connection 2
  group: "Connection 2 (Radarr Log)"
  show_if: "auth.connectionCount>=2"

- variable: auth.connection2Name
  default: "radarr-log"
  description: "Connection name identifier"
  type: string
  label: Connection Name
  group: "Connection 2 (Radarr Log)"
  show_if: "auth.connection2Enabled=true"
  required: true

- variable: auth.connection2SecretName
  default: "radarr-pg-secret"
  description: "Kubernetes secret containing database credentials"
  type: string
  label: Database Secret Name
  group: "Connection 2 (Radarr Log)"
  show_if: "auth.connection2Enabled=true"
  required: true

- variable: auth.connection2UsernameKey
  default: "username"
  description: "Key in secret containing username"
  type: string
  label: Username Key
  group: "Connection 2 (Radarr Log)"
  show_if: "auth.connection2Enabled=true"

- variable: auth.connection2PasswordKey
  default: "password"
  description: "Key in secret containing password"
  type: string
  label: Password Key
  group: "Connection 2 (Radarr Log)"
  show_if: "auth.connection2Enabled=true"

- variable: auth.connection2DatabaseKey
  default: "log-database"
  description: "Key in secret containing log database name"
  type: string
  label: Database Key (Log DB)
  group: "Connection 2 (Radarr Log)"
  show_if: "auth.connection2Enabled=true"

# Connection 3 (Sonarr Main)
- variable: auth.connection3Enabled
  default: true
  description: "Enable database connection 3"
  type: boolean
  label: Enable Connection 3
  group: "Connection 3 (Sonarr Main)"
  show_if: "auth.connectionCount>=3"

- variable: auth.connection3Name
  default: "sonarr"
  description: "Connection name identifier"
  type: string
  label: Connection Name
  group: "Connection 3 (Sonarr Main)"
  show_if: "auth.connection3Enabled=true"
  required: true

- variable: auth.connection3SecretName
  default: "sonarr-pg-secret"
  description: "Kubernetes secret containing database credentials"
  type: string
  label: Database Secret Name
  group: "Connection 3 (Sonarr Main)"
  show_if: "auth.connection3Enabled=true"
  required: true

- variable: auth.connection3UsernameKey
  default: "username"
  description: "Key in secret containing username"
  type: string
  label: Username Key
  group: "Connection 3 (Sonarr Main)"
  show_if: "auth.connection3Enabled=true"

- variable: auth.connection3PasswordKey
  default: "password"
  description: "Key in secret containing password"
  type: string
  label: Password Key
  group: "Connection 3 (Sonarr Main)"
  show_if: "auth.connection3Enabled=true"

- variable: auth.connection3DatabaseKey
  default: "database"
  description: "Key in secret containing database name"
  type: string
  label: Database Key
  group: "Connection 3 (Sonarr Main)"
  show_if: "auth.connection3Enabled=true"

# Connection 4 (Prowlarr)
- variable: auth.connection4Enabled
  default: true
  description: "Enable database connection 4"
  type: boolean
  label: Enable Connection 4
  group: "Connection 4 (Sonarr Log)"
  show_if: "auth.connectionCount>=4"

- variable: auth.connection4Name
  default: "sonarr-log"
  description: "Connection name identifier"
  type: string
  label: Connection Name
  group: "Connection 4 (Sonarr Log)"
  show_if: "auth.connection4Enabled=true"
  required: true

- variable: auth.connection4SecretName
  default: "sonarr-pg-secret"
  description: "Kubernetes secret containing database credentials"
  type: string
  label: Database Secret Name
  group: "Connection 4 (Sonarr Log)"
  show_if: "auth.connection4Enabled=true"
  required: true

- variable: auth.connection4UsernameKey
  default: "username"
  description: "Key in secret containing username"
  type: string
  label: Username Key
  group: "Connection 4 (Sonarr Log)"
  show_if: "auth.connection4Enabled=true"

- variable: auth.connection4PasswordKey
  default: "password"
  description: "Key in secret containing password"
  type: string
  label: Password Key
  group: "Connection 4 (Sonarr Log)"
  show_if: "auth.connection4Enabled=true"

- variable: auth.connection4DatabaseKey
  default: "log-database"
  description: "Key in secret containing log database name"
  type: string
  label: Database Key (Log DB)
  group: "Connection 4 (Sonarr Log)"
  show_if: "auth.connection4Enabled=true"

# Connection 5 (Jellyseerr Main)
- variable: auth.connection5Enabled
  default: true
  description: "Enable database connection 5"
  type: boolean
  label: Enable Connection 5
  group: "Connection 5 (Jellyseerr Main)"
  show_if: "auth.connectionCount>=5"

- variable: auth.connection5Name
  default: "jellyseerr"
  description: "Connection name identifier"
  type: string
  label: Connection Name
  group: "Connection 5 (Jellyseerr Main)"
  show_if: "auth.connection5Enabled=true"
  required: true

- variable: auth.connection5SecretName
  default: "jellyseerr-pg-secret"
  description: "Kubernetes secret containing database credentials"
  type: string
  label: Database Secret Name
  group: "Connection 5 (Jellyseerr Main)"
  show_if: "auth.connection5Enabled=true"
  required: true

- variable: auth.connection5UsernameKey
  default: "username"
  description: "Key in secret containing username"
  type: string
  label: Username Key
  group: "Connection 5 (Jellyseerr Main)"
  show_if: "auth.connection5Enabled=true"

- variable: auth.connection5PasswordKey
  default: "password"
  description: "Key in secret containing password"
  type: string
  label: Password Key
  group: "Connection 5 (Jellyseerr Main)"
  show_if: "auth.connection5Enabled=true"

- variable: auth.connection5DatabaseKey
  default: "database"
  description: "Key in secret containing database name"
  type: string
  label: Database Key
  group: "Connection 5 (Jellyseerr Main)"
  show_if: "auth.connection5Enabled=true"

# Connection 6 (Prowlarr Main)
- variable: auth.connection6Enabled
  default: true
  description: "Enable database connection 6"
  type: boolean
  label: Enable Connection 6
  group: "Connection 6 (Prowlarr Main)"
  show_if: "auth.connectionCount>=6"

- variable: auth.connection6Name
  default: "prowlarr"
  description: "Connection name identifier"
  type: string
  label: Connection Name
  group: "Connection 6 (Prowlarr Main)"
  show_if: "auth.connection6Enabled=true"
  required: true

- variable: auth.connection6SecretName
  default: "prowlarr-pg-secret"
  description: "Kubernetes secret containing database credentials"
  type: string
  label: Database Secret Name
  group: "Connection 6 (Prowlarr Main)"
  show_if: "auth.connection6Enabled=true"
  required: true

- variable: auth.connection6UsernameKey
  default: "username"
  description: "Key in secret containing username"
  type: string
  label: Username Key
  group: "Connection 6 (Prowlarr Main)"
  show_if: "auth.connection6Enabled=true"

- variable: auth.connection6PasswordKey
  default: "password"
  description: "Key in secret containing password"
  type: string
  label: Password Key
  group: "Connection 6 (Prowlarr Main)"
  show_if: "auth.connection6Enabled=true"

- variable: auth.connection6DatabaseKey
  default: "database"
  description: "Key in secret containing database name"
  type: string
  label: Database Key
  group: "Connection 6 (Prowlarr Main)"
  show_if: "auth.connection6Enabled=true"

# Connection 7 (Prowlarr Log)
- variable: auth.connection7Enabled
  default: true
  description: "Enable database connection 7"
  type: boolean
  label: Enable Connection 7
  group: "Connection 7 (Prowlarr Log)"
  show_if: "auth.connectionCount>=7"

- variable: auth.connection7Name
  default: "prowlarr-log"
  description: "Connection name identifier"
  type: string
  label: Connection Name
  group: "Connection 7 (Prowlarr Log)"
  show_if: "auth.connection7Enabled=true"
  required: true

- variable: auth.connection7SecretName
  default: "prowlarr-pg-secret"
  description: "Kubernetes secret containing database credentials"
  type: string
  label: Database Secret Name
  group: "Connection 7 (Prowlarr Log)"
  show_if: "auth.connection7Enabled=true"
  required: true

- variable: auth.connection7UsernameKey
  default: "username"
  description: "Key in secret containing username"
  type: string
  label: Username Key
  group: "Connection 7 (Prowlarr Log)"
  show_if: "auth.connection7Enabled=true"

- variable: auth.connection7PasswordKey
  default: "password"
  description: "Key in secret containing password"
  type: string
  label: Password Key
  group: "Connection 7 (Prowlarr Log)"
  show_if: "auth.connection7Enabled=true"

- variable: auth.connection7DatabaseKey
  default: "log-database"
  description: "Key in secret containing log database name"
  type: string
  label: Database Key (Log DB)
  group: "Connection 7 (Prowlarr Log)"
  show_if: "auth.connection7Enabled=true"

# TLS Configuration
- variable: tls.enabled
  default: true
  description: "Enable TLS for PostgreSQL connections"
  type: boolean
  label: Enable TLS
  group: "TLS Configuration"

- variable: tls.serverTlsSecret
  default: "pgbouncer-postgres-tls"
  description: "Name of Kubernetes secret containing TLS certificates"
  type: string
  label: TLS Secret Name
  group: "TLS Configuration"
  show_if: "tls.enabled=true"

- variable: tls.sslMode
  default: "verify-full"
  description: "PostgreSQL SSL mode"
  type: enum
  label: SSL Mode
  group: "TLS Configuration"
  show_if: "tls.enabled=true"
  options:
    - "disable"
    - "allow"
    - "prefer"
    - "require"
    - "verify-ca"
    - "verify-full"

# Service Configuration
- variable: service.type
  default: "ClusterIP"
  description: "Kubernetes service type"
  type: enum
  label: Service Type
  group: "Service Configuration"
  options:
    - "ClusterIP"
    - "NodePort"
    - "LoadBalancer"

- variable: service.port
  default: 5432
  description: "Service port for client connections"
  type: int
  label: Service Port
  group: "Service Configuration"

# Resource Configuration
- variable: resources.requests.memory
  default: "128Mi"
  description: "Memory request for PgBouncer pods"
  type: string
  label: Memory Request
  group: "Resources"

- variable: resources.requests.cpu
  default: "100m"
  description: "CPU request for PgBouncer pods"
  type: string
  label: CPU Request
  group: "Resources"

- variable: resources.limits.memory
  default: "256Mi"
  description: "Memory limit for PgBouncer pods"
  type: string
  label: Memory Limit
  group: "Resources"

- variable: resources.limits.cpu
  default: "200m"
  description: "CPU limit for PgBouncer pods"
  type: string
  label: CPU Limit
  group: "Resources"

# Security Configuration
- variable: securityContext.runAsNonRoot
  default: true
  description: "Run container as non-root user"
  type: boolean
  label: Run as Non-Root
  group: "Security"

- variable: securityContext.runAsUser
  default: 1001
  description: "User ID to run container as"
  type: int
  label: Run as User ID
  group: "Security"

- variable: podSecurityContext.fsGroup
  default: 1001
  description: "File system group ID for pod volumes"
  type: int
  label: FS Group ID
  group: "Security"

# Scheduling Configuration
- variable: nodeSelector
  default: {}
  description: "Node selector constraints for pod scheduling"
  type: map
  label: Node Selector
  group: "Scheduling"

- variable: tolerations
  default: []
  description: "Pod tolerations for node taints"
  type: array
  label: Tolerations
  group: "Scheduling"

- variable: affinity
  default: {}
  description: "Pod affinity and anti-affinity rules"
  type: map
  label: Affinity Rules
  group: "Scheduling"