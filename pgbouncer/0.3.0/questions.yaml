categories:
- Database
- Connection Pool
- PostgreSQL

questions:
# Basic Configuration
- variable: replicaCount
  default: 1
  description: "Number of PgBouncer replicas"
  type: int
  label: Replica Count
  group: "Basic Configuration"

- variable: image.tag
  default: "1.24.1"
  description: "PgBouncer image tag/version"
  type: string
  label: Image Version
  group: "Basic Configuration"

- variable: image.repository
  default: "bitnami/pgbouncer"
  description: "PgBouncer image repository"
  type: string
  label: Image Repository
  group: "Basic Configuration"

# PostgreSQL Connection Configuration
- variable: postgresql.host
  default: "postgresql-cluster-rw.postgres-system.svc.cluster.local"
  description: "PostgreSQL server hostname or service name"
  type: string
  label: PostgreSQL Host
  group: "PostgreSQL Connection"
  required: true

- variable: postgresql.port
  default: 5432
  description: "PostgreSQL server port"
  type: int
  label: PostgreSQL Port
  group: "PostgreSQL Connection"

- variable: postgresql.username
  default: "postgres"
  description: "Static PostgreSQL username for PgBouncer to connect with (legacy)"
  type: string
  label: PostgreSQL Username (Static)
  group: "PostgreSQL Connection"

- variable: postgresql.usernameSecret.name
  default: "postgresql-superuser"
  description: "Name of Kubernetes secret containing PostgreSQL username"
  type: string
  label: Username Secret Name
  group: "PostgreSQL Connection"

- variable: postgresql.usernameSecret.key
  default: "username"
  description: "Key within the secret containing the PostgreSQL username"
  type: string
  label: Username Secret Key
  group: "PostgreSQL Connection"

- variable: postgresql.passwordSecret.name
  default: "postgresql-superuser"
  description: "Name of Kubernetes secret containing PostgreSQL password"
  type: string
  label: Password Secret Name
  group: "PostgreSQL Connection"
  required: true

- variable: postgresql.passwordSecret.key
  default: "password"
  description: "Key within the secret containing the PostgreSQL password"
  type: string
  label: Password Secret Key
  group: "PostgreSQL Connection"

# Authentication Configuration
- variable: auth.type
  default: "scram-sha-256"
  description: "PostgreSQL authentication method"
  type: enum
  label: Authentication Type
  group: "Authentication"
  options:
    - "scram-sha-256"
    - "md5"
    - "plain"
    - "trust"

- variable: auth.poolMode
  default: "transaction"
  description: "PgBouncer pool mode"
  type: enum
  label: Pool Mode
  group: "Authentication"
  options:
    - "session"
    - "transaction"
    - "statement"

- variable: auth.database
  default: ""
  description: "Specific database to pool (leave empty for all databases)"
  type: string
  label: Target Database
  group: "Authentication"

- variable: auth.minPoolSize
  default: 5
  description: "Minimum pool size per user/database pair"
  type: int
  label: Minimum Pool Size
  group: "Authentication"

- variable: auth.ignoreStartupParameters
  default: ""
  description: "Comma-separated list of startup parameters to ignore"
  type: string
  label: Ignore Startup Parameters
  group: "Authentication"

# New Flexible User Authentication (v0.3.0)
- variable: auth.users
  default: []
  description: "List of users with flexible authentication options (NEW in v0.3.0)"
  type: array[object]
  label: User List (New Authentication Method)
  group: "Flexible Authentication"
  schema:
    type: object
    properties:
      name:
        type: string
        title: Username (Static)
        description: "Static username for PgBouncer authentication"
      usernameSecret:
        type: object
        title: Username from Secret
        description: "Reference to Kubernetes secret containing username"
        properties:
          name:
            type: string
            title: Secret Name
            description: "Name of the Kubernetes secret containing username"
          key:
            type: string
            title: Secret Key
            description: "Key within the secret containing the username"
            default: "username"
      password:
        type: string
        title: Plain Password (Auto-hashed)
        description: "Plain text password (automatically converted to SCRAM-SHA-256)"
      passwordSecret:
        type: object
        title: Password from Secret
        description: "Reference to Kubernetes secret containing password"
        properties:
          name:
            type: string
            title: Secret Name
            description: "Name of the Kubernetes secret"
          key:
            type: string
            title: Secret Key
            description: "Key within the secret containing the password"
            default: "password"

# External Userlist Configuration
- variable: auth.externalUserlist.enabled
  default: false
  description: "Use external userlist from ConfigMap or Secret"
  type: boolean
  label: Enable External Userlist
  group: "External Userlist"

- variable: auth.externalUserlist.configMap.name
  default: ""
  description: "ConfigMap name containing pre-built userlist"
  type: string
  label: ConfigMap Name (Pre-built Userlist)
  group: "External Userlist"
  show_if: "auth.externalUserlist.enabled=true"

- variable: auth.externalUserlist.configMap.key
  default: "userlist"
  description: "ConfigMap key containing userlist data"
  type: string
  label: ConfigMap Key
  group: "External Userlist"
  show_if: "auth.externalUserlist.configMap.name!="

- variable: auth.externalUserlist.secret.name
  default: ""
  description: "Secret name containing pre-built userlist"
  type: string
  label: Secret Name (Pre-built Userlist)
  group: "External Userlist"
  show_if: "auth.externalUserlist.enabled=true"

- variable: auth.externalUserlist.secret.key
  default: "userlist"
  description: "Secret key containing userlist data"
  type: string
  label: Secret Key
  group: "External Userlist"
  show_if: "auth.externalUserlist.secret.name!="

- variable: auth.externalUserlist.secretCredentials.name
  default: ""
  description: "Secret name containing username and password (auto-generates userlist)"
  type: string
  label: Credentials Secret Name
  group: "External Userlist"
  show_if: "auth.externalUserlist.enabled=true"

- variable: auth.externalUserlist.secretCredentials.usernameKey
  default: "username"
  description: "Key within the secret containing the username"
  type: string
  label: Username Key
  group: "External Userlist"
  show_if: "auth.externalUserlist.secretCredentials.name!="

- variable: auth.externalUserlist.secretCredentials.passwordKey
  default: "password"
  description: "Key within the secret containing the password"
  type: string
  label: Password Key
  group: "External Userlist"
  show_if: "auth.externalUserlist.secretCredentials.name!="

# Legacy Authentication (Backward Compatibility)
- variable: auth.userlist
  default: |
    "<Username>" "<SCRAM Password>"
  description: "Legacy static userlist (backward compatibility)"
  type: multiline
  label: Legacy User Authentication List
  group: "Legacy Authentication"

# TLS Configuration
- variable: tls.enabled
  default: true
  description: "Enable TLS for PostgreSQL connections"
  type: boolean
  label: Enable TLS
  group: "TLS Configuration"

- variable: tls.serverTlsSecret
  default: "pgbouncer-postgres-tls"
  description: "Name of Kubernetes secret containing TLS certificates"
  type: string
  label: TLS Secret Name
  group: "TLS Configuration"
  show_if: "tls.enabled=true"

- variable: tls.sslMode
  default: "verify-full"
  description: "PostgreSQL SSL mode"
  type: enum
  label: SSL Mode
  group: "TLS Configuration"
  show_if: "tls.enabled=true"
  options:
    - "disable"
    - "allow"
    - "prefer"
    - "require"
    - "verify-ca"
    - "verify-full"

# Service Configuration
- variable: service.type
  default: "ClusterIP"
  description: "Kubernetes service type"
  type: enum
  label: Service Type
  group: "Service Configuration"
  options:
    - "ClusterIP"
    - "NodePort"
    - "LoadBalancer"

- variable: service.port
  default: 5432
  description: "Service port for client connections"
  type: int
  label: Service Port
  group: "Service Configuration"

# Resource Configuration
- variable: resources.requests.memory
  default: "128Mi"
  description: "Memory request for PgBouncer pods"
  type: string
  label: Memory Request
  group: "Resources"

- variable: resources.requests.cpu
  default: "100m"
  description: "CPU request for PgBouncer pods"
  type: string
  label: CPU Request
  group: "Resources"

- variable: resources.limits.memory
  default: "256Mi"
  description: "Memory limit for PgBouncer pods"
  type: string
  label: Memory Limit
  group: "Resources"

- variable: resources.limits.cpu
  default: "200m"
  description: "CPU limit for PgBouncer pods"
  type: string
  label: CPU Limit
  group: "Resources"

# Security Configuration
- variable: securityContext.runAsNonRoot
  default: true
  description: "Run container as non-root user"
  type: boolean
  label: Run as Non-Root
  group: "Security"

- variable: securityContext.runAsUser
  default: 1001
  description: "User ID to run container as"
  type: int
  label: Run as User ID
  group: "Security"

- variable: podSecurityContext.fsGroup
  default: 1001
  description: "File system group ID for pod volumes"
  type: int
  label: FS Group ID
  group: "Security"

# Scheduling Configuration
- variable: nodeSelector
  default: {}
  description: "Node selector constraints for pod scheduling"
  type: map
  label: Node Selector
  group: "Scheduling"

- variable: tolerations
  default: []
  description: "Pod tolerations for node taints"
  type: array
  label: Tolerations
  group: "Scheduling"

- variable: affinity
  default: {}
  description: "Pod affinity and anti-affinity rules"
  type: map
  label: Affinity Rules
  group: "Scheduling"